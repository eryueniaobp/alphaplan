   1. 格式转换 2. 模型训练 3. 评估 4. 预测 || 这块需要深入xgboost支持
2. 先简单做，后期需要加入workflow...

数据格式转换 和配置文件的难题

Basic Conclusion
---------
1. predict gap will be better than |dem-gap|
2. solution-avg is baseline. (median will be better)
3. use cross-feature can improve result a lot
4. train with (train-data and test-data) .make learning rate high . generilization is not important in this case.

KEY
-
order:  'dist-day-slice'
traffic:  '{dist}-{day}-{slice}'
poi:  '{dist}'
weather: '{day}-{slice}'

smooth fea: missing weather and traffic data .
use a slicing window to smooth it .

Merge FLow:
0. sort as ins-key .  ( Improve you can sort seperately ,or else it will cost a lot of time  )
1.  merge dist-day-{slice} :: watch the  feacate.
2.  smooth the sup ,dem ,gap . sliding-window-avg .
Ins:
1.  ins fea ;
Train:
1 . directly train .
Solution:
1. directly predict the |demand-supply|
2. predict the demand and supply accordingly . and calc the |demand - supply| finally .

Test sample prepare:
1. transform the test sample; or directly use the cross-fold ?
2.


STEP:
1. python data_transform alpha.ini [test|train]
2. split ins  to every day . to sort
3. sort ins  and merge
4. use the id-map to transform to the real sample || ins_test_prepare.py

XGBOOST Train:
=======================
Strategy:
1. the average of district-slice maybe be stable.  : to check it .
2. the slice is very important .   holiday and workday is very important .
=========================
Evalaute:
MAPE - gap=1 and gap=0
metrics: gap/dem maybe it is stable.

dig into special point. So we can determine why dem is high suddenly .
=======================
Iteration Issue:
1. without district hash . => very low score .
    38578.2630865 score =  1.60864

2. add district hash . we can see the gap  changing a lot .to check if it is a right way .
    39333.6937825 42631.963801 score = ?
3. make weathere sparse.  2016-05-27
    36627.7600983 33315.584969 44989.2170047 34585.3892
    =>more high gap point .
    see the gap and |dem-sup| ; submit two results accordingly.
    score:  1.07136  . cann't determine which one is better. ( gap or |dem-sup| )

    it is still > 1 . so must focus on the little gap area .
4.  use cross feature  2016-05-28 will get the result .
    4.1  remove  [poi maybe useless|| remove poi info .]  train rmse very high .  [FAIL]
    4.2  use poi    train-dem rmse high. but train-gap is low , close to train-sup .  [SUCC]
         =>gap is more stable than  dem!! so predict gap is better.

         32304.701988 22389.4781479 37649.177971 22560.53855

         after adding more cross feature ,the total gap decreases .   [SUCC]

         current mape score >1 , so the real  total gap should decrease .[SUCC]
    4.3 use temp and pm25 and tf[1-4] as the cross features.  [05-28]

5.  solve the special district:  c4ec24e0a58ebedaa1661e5c09e47bb5
    use the poi-data to find the similar district [FAIL] distance > 80000 .
    =>deduce from the order data .
    =====>
6 . solution avg and solution median [2016-05-28]
    use more cross-features ;
    use test-data to train .and make learning-rate=1.0 . make it more conservitive.

### Prediction
num slice
   5 142
   5 130
   5 118
   5 106
   5 94
   5 82
   5 70
   5 58
   3 46

### Analyze
train_sample:
    cat ins.merge|awk -F, 'BEGIN{sum=0;}{sum+=$3}END{print NR,sum,sum/NR}'
    163491 1516460 9.2755
test_sample:
    cat ins.merge|awk -F, 'BEGIN{sum=0;}{sum+=$3}END{print NR,sum,sum/NR}'
    7924 108975 13.7525
average result:
    gap_sum bingo.6.csv
    2838 37649.2 13.2661
    gap_sum bingo.gap.1.csv
    2838 22560.5 7.94945

    cat bingo.avg |awk -F, 'BEGIN{sum=0;}{sum+=$3}END{print NR,sum,sum/NR}'
    2838 27191.9 9.58137
    cat bingo.avg.1.csv |awk -F, 'BEGIN{sum=0;}{sum+=$3}END{print NR,sum,sum/NR}'
    2838 27761 9.78188

    gap_sum bingo.median
    2838 20264 7.14024

    > Guess: 0.368782 will be the result of the solution-avg .  [RESULT] 0.477694 .
    > Guess: avg_gap should be less than 9 ..
    > Guess: a little improvement on the solution-avg will beat a lot competitors
    todo: check the result of the solution-avg.

cat dump.dem |grep -E "\[[0-9#][^]]+" |grep yes| grep -oE "\[[0-9#][^]]+"|sort |uniq -c |wc -l
945
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "tf1[^]]+"|sort|uniq -c |wc -l
898
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "tf2[^]]+"|sort|uniq -c |wc -l
690
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "tf3[^]]+"|sort|uniq -c |wc -l
443
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "tf4[^]]+"|sort|uniq -c |wc -l
343
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "temp[^]]+"|sort|uniq -c |wc -l
33
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "pm25[^]]+"|sort|uniq -c |wc -l
269
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "wea[^]]+"|sort|uniq -c |wc -l
5
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem |grep -Eo "dishash[^]]+"|sort|uniq -c |wc -l
13

work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem|grep -E "is_work" |wc -l
376
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem|grep -E "slice" |wc -l
1237

[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat dump.dem|grep -E "dayofweek" |wc -l
523


baidu@transfer-data $cat bingo.2.csv |awk -F , 'BEGIN{sum = 0 }{if ($3 <2  ) sum++;}END{print sum;}'
1333
baidu@transfer-data $cat bingo.2.csv |awk -F , 'BEGIN{sum = 0 }{if ($3 <1  ) sum++;}END{print sum;}'
898

cat bingo.3.csv |awk -F , 'BEGIN{sum = 0 }{if ($3 >1 && $3<10 ) sum++;}END{print sum;}'
1410

#
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat order.all |awk  'BEGIN{sum=0;}{if($4 == "c4ec24e0a58ebedaa1661e5c09e47bb5") sum++;}END{print sum;}'
40992
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat order.all |awk  'BEGIN{sum=0;}{if($5 == "c4ec24e0a58ebedaa1661e5c09e47bb5") sum++;}END{print sum;}'
10925
[work@hkg02-dx-hd048.hkg02.baidu.com alphaplan]$ cat order.all |awk  'BEGIN{sum=0;}{if($4==$5 && $5 == "c4ec24e0a58ebedaa1661e5c09e47bb5") sum++;}END{print sum;}'
8984

DEFAULT VALUE:  default value = 1 will be better.||BIG IMPROVEMENT.

	gap=1	gap=2	gap=3	gap=4
0	1	1	1	1
1	0	0.5	0.67 	0.75
2	1	0	0.33 	0.5
3	2	0.5	0	0.25

Discretize
-
cat pm25|awk '{print $2,int($2/5)}' |awk '{print $2}'|uniq -c|wc -l
48

cat temp |awk '{print $2,int($2/2)}' |awk '{print $2}'| uniq -c |wc -l
16

cat tf1|awk '{ split($2,ta,":") ;print int(ta[2]/5)}' |sort -nr |uniq -c|wc -l
839
cat tf2|awk '{ split($3,ta,":") ;print int(ta[2]/5)}' |sort -nr |uniq -c|wc -l
402
cat tf3|awk '{ split($4,ta,":") ;print int(ta[2]/5)}' |sort -nr |uniq -c|wc -l
158
cat tf4|awk '{ split($5,ta,":") ;print int(ta[2]/5)}' |sort -nr |uniq -c|wc -l
89



